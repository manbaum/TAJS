fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js)
    ->[block 1]
  block 1:
    node 1: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 2: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 3: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 4: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 5: constant["tajs-host-env:error-captureStackTrace-model.js",v5] (host-environment-sources-loader)
    node 6: constant[true,v6] (host-environment-sources-loader)
    ->[block 5]
  block 5:
    node 7: call[TAJS_load,v5,v6,v7] (host-environment-sources-loader)
    ->[block 6]
  block 6:
    node 8: call[-,v7,-] (host-environment-sources-loader)
    ->[block 7]
  block 7:
    node 9: constant["PRE",-] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:1:1)
    ->[block 8]
  block 8:
    node 10: constant["INIT",-] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:2:13)
    ->[block 9]
  block 9:
    node 11: constant["COND",v8] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:2:21)
    node 12: begin-loop[v8] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:2:36)
    ->[block 10] ~>[block 14]
  block 10:
    node 13: if[v8](true-block:11,false-block:15) (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:2:21)
    ->[block 11,block 15] ~>[block 14]
  block 11:
    node 14: constant["BODY",-] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:3:4)
    node 15: constant["C-COND",v9] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:4:7)
    node 16: if[v9](true-block:12,false-block:13) (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:4:4)
    ->[block 12,block 13] ~>[block 14]
  block 12:
    node 17: nop(continue label) (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:5:8)
    ->[block 13] ~>[block 14]
  block 13:
    node 18: constant["INC",-] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:2:29)
    ->[block 9] ~>[block 14]
  block 14:
    node 19: end-loop[v8] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:2:21)
    ->[block 18]
  block 15:
    node 20: end-loop[v8] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:2:21)
    ->[block 16]
  block 16:
    node 21: constant["POST",-] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:8:1)
    ->[block 17]
  block 17: [exit-ordinary]
    node 22: return[v1] (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js)
    ->[]
  block 18: [exit-exceptional]
    node 23: exceptional-return (out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js)
    ->[]

out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js: [definite] Ordinary program exit is unreachable
out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:2:21: [definite] The conditional expression is always true
out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js:4:4: [definite] The conditional expression is always true
out/temp-sources/TestFlowgraphBuilder.flowgraphbuilder_labelledContinue.js: [definite] Exceptional program exit is unreachable
Soundness testing succeeded for 0 checks (with 0 expected failures)
