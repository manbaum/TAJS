fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js)
    node 1: function-decl[function f(),-] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:1:1)
    ->[block 1]
  block 1:
    node 2: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 3: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 4: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 5: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 6: constant["tajs-host-env:error-captureStackTrace-model.js",v5] (host-environment-sources-loader)
    node 7: constant[true,v6] (host-environment-sources-loader)
    ->[block 5]
  block 5:
    node 8: call[TAJS_load,v5,v6,v7] (host-environment-sources-loader)
    ->[block 6]
  block 6:
    node 9: call[-,v7,-] (host-environment-sources-loader)
    ->[block 7]
  block 7:
    node 10: read-variable['f',v12,v11] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:12:13)
    ->[block 8]
  block 8:
    node 11: call[v11,v12,v10] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:12:13)
    ->[block 9]
  block 9:
    node 12: call[TAJS_assert,v10,-] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:12:1)
    ->[block 10]
  block 10:
    node 13: constant["OK",v15] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:14:16)
    ->[block 11]
  block 11:
    node 14: call[TAJS_dumpValue,v15,-] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:14:1)
    ->[block 12]
  block 12: [exit-ordinary]
    node 15: return[v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js)
    ->[]
  block 13: [exit-exceptional]
    node 16: exceptional-return (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js)
    ->[]
function f()
  block 14: [entry]
    node 17: constant[undefined,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:1:1)
    ->[block 15]
  block 15:
    node 18: read-variable['toString',v13,v12] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:20)
    ->[block 16] ~>[block 19]
  block 16:
    node 19: call[v12,v13,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:20)
    ->[block 17] ~>[block 19]
  block 17:
    node 20: if[v1](true-block:18,false-block:27) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:20)
    ->[block 18,block 27] ~>[block 19]
  block 18:
    node 21: constant[false,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:34)
    ->[block 27] ~>[block 19]
  block 19:
    node 22: catch[v7] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:3:9)
    node 23(~41): read-variable['toString',v9,v8] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 20] ~>[block 41]
  block 20:
    node 24(~42): call[v8,v9,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 21] ~>[block 41]
  block 21:
    node 25(~43): if[v1](true-block:22,false-block:23) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 22,block 23] ~>[block 41]
  block 22:
    node 26(~44): constant[false,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:34)
    ->[block 23] ~>[block 41]
  block 23:
    node 27(~50): read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 24]
  block 24:
    node 28(~51): call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 25]
  block 25:
    node 29(~52): if[v1](true-block:26,false-block:57) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 26,block 57]
  block 26:
    node 30(~53): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 57]
  block 27:
    node 31(~41): read-variable['toString',v11,v10] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 28] ~>[block 41]
  block 28:
    node 32(~42): call[v10,v11,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 29] ~>[block 41]
  block 29:
    node 33(~43): if[v1](true-block:30,false-block:31) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 30,block 31] ~>[block 41]
  block 30:
    node 34(~44): constant[false,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:34)
    ->[block 31] ~>[block 41]
  block 31:
    node 35(~54): read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 32]
  block 32:
    node 36(~55): call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 33]
  block 33:
    node 37(~56): if[v1](true-block:34,false-block:57) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 34,block 57]
  block 34:
    node 38(~57): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 57]
  block 35:
    node 39: throw[v2] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:2:5)
    ->[block 58]
  block 36:
    node 40: throw[v7] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:3:9)
    ->[block 41] ~>[block 41]
  block 37:
    node 41: read-variable['toString',v11,v10] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 38] ~>[block 41]
  block 38:
    node 42: call[v10,v11,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 39] ~>[block 41]
  block 39:
    node 43: if[v1](true-block:40,false-block:45) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 40,block 45] ~>[block 41]
  block 40:
    node 44: constant[false,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:34)
    ->[block 45] ~>[block 41]
  block 41:
    node 45: catch[v2] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:2:5)
    node 46(~54): read-variable['toString',v4,v3] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 42]
  block 42:
    node 47(~55): call[v3,v4,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 43]
  block 43:
    node 48(~56): if[v1](true-block:44,false-block:57) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 44,block 57]
  block 44:
    node 49(~57): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 57]
  block 45:
    node 50(~54): read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 46]
  block 46:
    node 51(~55): call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 47]
  block 47:
    node 52(~56): if[v1](true-block:48,false-block:57) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 48,block 57]
  block 48:
    node 53(~57): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 57]
  block 49:
    node 54: read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 50]
  block 50:
    node 55: call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 51]
  block 51:
    node 56: if[v1](true-block:52,false-block:57) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 52,block 57]
  block 52:
    node 57: constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 57]
  block 53:
    node 58(~54): read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 54]
  block 54:
    node 59(~55): call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 55]
  block 55:
    node 60(~56): if[v1](true-block:56,false-block:57) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 56,block 57]
  block 56:
    node 61(~57): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 57]
  block 57: [exit-ordinary]
    node 62: return[v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:1:1)
    ->[]
  block 58: [exit-exceptional]
    node 63: exceptional-return (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:1:1)
    ->[]

test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:20: [definite] The conditional expression is always true
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20: [definite] The conditional expression is always true
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16: [definite] The conditional expression is always true
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js: [definite] Exceptional program exit is unreachable
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:14:1: [info] Abstract value: "OK"
Soundness testing succeeded for 21 checks (with 0 expected failures)
