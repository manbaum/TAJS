fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js)
    node 1: function-decl[function fooo(),-] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:1:1)
    node 2: vardecl['x'] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:5:5)
    ->[block 1]
  block 1:
    node 3: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 4: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 5: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 6: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 7: constant["tajs-host-env:error-captureStackTrace-model.js",v5] (host-environment-sources-loader)
    node 8: constant[true,v6] (host-environment-sources-loader)
    ->[block 5]
  block 5:
    node 9: call[TAJS_load,v5,v6,v7] (host-environment-sources-loader)
    ->[block 6]
  block 6:
    node 10: call[-,v7,-] (host-environment-sources-loader)
    ->[block 7]
  block 7:
    node 11: new[v8] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:5:9)
    node 12: write-variable[v8,'x'] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:5:5)
    node 13: read-variable['fooo',v11,v10] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:7:5)
    ->[block 8]
  block 8:
    node 14: call[v10,v11,v9] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:7:5)
    ->[block 9]
  block 9:
    node 15: if[v9](true-block:10,false-block:11) (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:7:1)
    ->[block 10,block 11]
  block 10:
    node 16: read-variable['x',v13,-] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:8:2)
    node 17: constant[1234.0,v12] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:8:10)
    node 18: write-property[v13,'bar',v12] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:8:2)
    ->[block 12]
  block 11:
    node 19: read-variable['x',v15,-] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:10:2)
    node 20: constant[2345.0,v14] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:10:10)
    node 21: write-property[v15,'bar',v14] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:10:2)
    ->[block 12]
  block 12:
    node 22: read-variable['x',v19,-] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:12:16)
    node 23: read-property[v19,'bar',v18] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:12:16)
    ->[block 13]
  block 13:
    node 24: call[TAJS_dumpValue,v18,-] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:12:1)
    ->[block 14]
  block 14: [exit-ordinary]
    node 25: return[v1] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js)
    ->[]
  block 15: [exit-exceptional]
    node 26: exceptional-return (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js)
    ->[]
function fooo()
  block 16: [entry]
    node 27: constant[undefined,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:1:1)
    ->[block 17]
  block 17:
    node 28: read-variable['Math',v3,-] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:2:9)
    node 29: read-property[v3,'random',-] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:2:9)
    ->[block 18]
  block 18:
    node 30: call[v3,'random',v1] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:2:9)
    ->[block 19]
  block 19: [exit-ordinary]
    node 31: return[v1] (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:1:1)
    ->[]
  block 20: [exit-exceptional]
    node 32: exceptional-return (test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:1:1)
    ->[]

test-resources/src/flowgraphbuilder/flowgraph_builder0080.js: [definite] Exceptional program exit is unreachable
test-resources/src/flowgraphbuilder/flowgraph_builder0080.js:12:1: [info] Abstract value: UIntPos
Soundness testing succeeded for 18 checks (with 0 expected failures)
